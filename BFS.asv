function goalstate = BFS( start_state )
    import CQueue
    import hasBeenExplored;
    goalstate = [];
    if start_state.isGoalState()
        goalstate = start_state;
    end
    listOfExploredStates = [];
    queue = CQueue();
    queue.push(start_state);
    listOfExploredStates = [listOfExploredStates, start_state.layout];
    
    %BFS will run until the queue is empty (i.e. all states have been
    %explored
    while queue.isempty() == 0
        state = queue.pop();
        listOfExploredStates = [listOfExploredStates, state.layout];
        %disp(listOfExploredStates(1).layout)
        if state.canmovedown()
            newstate = state.movedown();
            if newstate.isGoalState()
                goalstate = newstate;
                break;
            end
            if hasBeenExplored(newstate, listOfExploredStates) == 0
                queue.push(newstate)
            end
        end
        
        if state.canmoveup()
            newstate = state.moveup();
            if newstate.isGoalState()
                goalstate = newstate;
                break;
            end
            if hasBeenExplored(newstate, listOfExploredStates) == 0
                queue.push(newstate)
            end
        end
        
        if state.canmoveleft()
            newstate = state.moveleft();
            if newstate.isGoalState()
                goalstate = newstate;
                break;
            end
            if hasBeenExplored(newstate, listOfExploredStates) == 0
                queue.push(newstate)
            end
        end
        
        if state.canmoveright()
            newstate = state.moveright();
            if newstate.isGoalState()
                goalstate = newstate;
                break;
            end
            
            if hasBeenExplored(newstate, listOfExploredStates) == 0
                queue.push(newstate)
            end
        end
    end
end

