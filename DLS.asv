function [goalstate, hasFoundGoal] = DLS( start_state, hasFoundGoal, exploredStates )
%DLS returns the goal state along with a boolean that states whether    
    import hasBeenExplored;
    goalstate = [];
    if start_state.isGoalState()
        goalstate = start_state;
    end
    if start_state.canmovedown()
        nextstate = start_state.movedown();
        stateHasBeenExplored = hasBeenExplored(nextstate, exploredStates);
        if ~stateHasBeenExplored
            exploredStates = [exploredStates, nextState.layout];
            if nextstate.isGoalState()
                goalstate = nextstate; 
                hasFoundGoal = 1;
                disp('Here')
                return
            elseif nextstate.pathcost < 31 && hasFoundGoal == 0
                DLS(nextstate, hasFoundGoal, exploredStates);
            end
        end
    end

    if start_state.canmoveup()
        nextstate = start_state.moveup();
        stateHasBeenExplored = hasBeenExplored(nextstate, exploredStates);
        if ~stateHasBeenExplored
            exploredStates = [exploredStates, nextState.layout];
            if nextstate.isGoalState()
                goalstate = nextstate; 
                hasFoundGoal = 1;
                disp('Here')
                return
            elseif nextstate.pathcost < 31 && hasFoundGoal == 0
                DLS(nextstate, hasFoundGoal, exploredStates);
            end
        end
    end

    if start_state.canmoveright()
        nextstate = start_state.moveright();
        stateHasBeenExplored = hasBeenExplored(nextstate, exploredStates);
        if ~stateHasBeenExplored
            exploredStates = [exploredStates, nextState.layout];
            if nextstate.isGoalState()
                goalstate = nextstate; 
                hasFoundGoal = 1;
                disp('Here')
                return
            elseif nextstate.pathcost < 31 && hasFoundGoal == 0
                DLS(nextstate, hasFoundGoal, exploredStates);
            end
        end
    end

    if start_state.canmoveleft()
        nextstate = start_state.moveleft();
        stateHasBeenExplored = hasBeenExplored(nextstate, exploredStates);
        if ~stateHasBeenExplored
            exploredStates = [exploredStates, nextState.layout];
            if nextstate.isGoalState()
                goalstate = nextstate; 
                hasFoundGoal = 1;
                disp('Here')
                return
            elseif nextstate.pathcost < 31 && hasFoundGoal == 0
                DLS(nextstate, hasFoundGoal, exploredStates);
            end
        end
    end
end
